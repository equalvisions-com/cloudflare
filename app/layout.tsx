import type { Metadata } from "next";
import { ThemeProvider } from "next-themes";
import "./globals.css";
import { ConvexAuthNextjsServerProvider, convexAuthNextjsToken } from "@convex-dev/auth/nextjs/server";
import ConvexClientProvider from "@/components/ConvexClientProvider";
import { UserMenuServer, getUserProfile } from "@/components/user-menu/UserMenuServer";
import { AudioProvider } from "@/components/audio-player/AudioContext";
import { PersistentPlayer } from "@/components/audio-player/PersistentPlayer";
import { MobileDock } from "@/components/ui/mobile-dock";
import { SidebarProvider } from "@/components/ui/sidebar-context";
import { Inter, JetBrains_Mono } from "next/font/google";


const inter = Inter({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const jetbrainsMono = JetBrains_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Convex + Next.js + Convex Auth",
  description: "Generated by npm create convex",
  icons: {
    icon: "/convex.svg",
  },
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  // Get all user profile information
  const { displayName, isAuthenticated, isBoarded, profileImage, userId, pendingFriendRequestCount } = await getUserProfile();

  return (
    <ConvexAuthNextjsServerProvider>
      {/* `suppressHydrationWarning` only affects the html tag,
      // and is needed by `ThemeProvider` which sets the theme
      // class attribute on it */}
      <html lang="en" suppressHydrationWarning className="h-full">
        <head>
          <meta name="viewport" content="width=device-width, initial-scale=1.0, viewport-fit=cover, maximum-scale=1.0, user-scalable=no"/>
          <script dangerouslySetInnerHTML={{
            __html: `
              // Fix for iOS Chrome/Safari viewport height issues
              function setViewportProperty() {
                // First get the viewport height
                let vh = window.innerHeight * 0.01;
                // Then set the value in the --vh custom property to the root of the document
                document.documentElement.style.setProperty('--vh', \`\${vh}px\`);
                
                // Also ensure body has correct height on iOS
                if (/iPhone|iPad|iPod/.test(navigator.userAgent)) {
                  document.body.style.height = window.innerHeight + 'px';
                }
              }
              
              // Initial call
              setViewportProperty();
              
              // Re-calculate on resize and orientation change
              window.addEventListener('resize', setViewportProperty);
              window.addEventListener('orientationchange', setViewportProperty);
            `
          }} />
        </head>
        <body
          className={`${inter.variable} ${jetbrainsMono.variable} antialiased no-overscroll h-full flex flex-col`}
          style={{ minHeight: '100vh' }}
        >
          <ConvexClientProvider>
            <ThemeProvider attribute="class">
              <AudioProvider>
                <SidebarProvider 
                  isAuthenticated={isAuthenticated} 
                  username={displayName}
                  displayName={displayName}
                  isBoarded={isBoarded}
                  profileImage={profileImage}
                  userId={userId}
                  pendingFriendRequestCount={pendingFriendRequestCount}
                >
                  <div className="">
                    <div className="hidden">
                      <UserMenuServer />
                    </div>
                    {children}
                  </div>
                  <PersistentPlayer />
                  <MobileDock />
                </SidebarProvider>
              </AudioProvider>
            </ThemeProvider>
          </ConvexClientProvider>
        </body>
      </html>
    </ConvexAuthNextjsServerProvider>
  );
}
