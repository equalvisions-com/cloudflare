import type { Metadata } from "next";
import { ThemeProvider } from "next-themes";
import "./globals.css";
import { ConvexAuthNextjsServerProvider, convexAuthNextjsToken } from "@convex-dev/auth/nextjs/server";
import ConvexClientProvider from "@/components/ConvexClientProvider";
import { UserMenuServer, getUserProfile } from "@/components/user-menu/UserMenuServer";
import { AudioProvider } from "@/components/audio-player/AudioContext";
import { PersistentPlayer } from "@/components/audio-player/PersistentPlayer";
import { MobileDock } from "@/components/ui/mobile-dock";
import { SidebarProvider } from "@/components/ui/sidebar-context";
import { GeistSans } from 'geist/font/sans';
import Link from "next/link";
import { Twitter } from "lucide-react";
import { MobileSearch } from "@/components/mobile/MobileSearch";

export const metadata: Metadata = {
  title: "Convex + Next.js + Convex Auth",
  description: "Generated by npm create convex",
  icons: {
    icon: "/convex.svg",
  },
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  // Get user profile information
  const { displayName, isAuthenticated } = await getUserProfile();

  return (
    <ConvexAuthNextjsServerProvider>
      {/* `suppressHydrationWarning` only affects the html tag,
      // and is needed by `ThemeProvider` which sets the theme
      // class attribute on it */}
      <html lang="en" suppressHydrationWarning>
        <head>
          <meta name="viewport" content="width=device-width, initial-scale=1.0, viewport-fit=cover"/>
        </head>
        <body
          className={`${GeistSans.className} antialiased no-overscroll`}
        >
          <ConvexClientProvider>
          <ThemeProvider attribute="class" defaultTheme="dark">
                          <AudioProvider>
                <SidebarProvider isAuthenticated={isAuthenticated} username={displayName}>
                  <div className="">
                    <div className="grid grid-cols-3 items-center mx-4 mt-2 z-50 sm:block md:hidden">
                      <div className="flex justify-start">
                        <UserMenuServer />
                      </div>
                      <div className="flex justify-center font-medium">
                        <Twitter className="h-8 w-8 fill-[#1DA1F2] stroke-[#1DA1F2]" />
                      </div>
                      <div className="flex justify-end">
                        <Link href={isAuthenticated ? "/chat" : "/signin"} className={!isAuthenticated ? "" : "hidden"}>
                          <button className="bg-secondary rounded-full text-sm font-semibold px-4 py-1.5 mr-2">
                            Sign in
                          </button>
                        </Link>
                        <MobileSearch />
                      </div>
                    </div>
                    {children}
                  </div>
                  <PersistentPlayer />
                  <MobileDock />
                </SidebarProvider>
              </AudioProvider>
            </ThemeProvider>
          </ConvexClientProvider>
        </body>
      </html>
    </ConvexAuthNextjsServerProvider>
  );
}
